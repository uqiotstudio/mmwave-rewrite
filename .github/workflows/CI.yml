name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Build mmwave-dashboard
        run: nix build .#packages.x86_64-linux.mmwave-dashboard
        
      - name: Build mmwave-machine
        run: nix build .#packages.x86_64-linux.mmwave-machine
        
      - name: Build mmwave-discovery
        run: nix build .#packages.x86_64-linux.mmwave-discovery
        
      - name: Upload release assets
        if: github.event_name == 'push'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./result/bin/mmwave-dashboard
          asset_name: mmwave-dashboard
          asset_content_type: application/octet-stream

      - name: Upload mmwave-machine binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./result/bin/mmwave-machine
          asset_name: mmwave-machine
          asset_content_type: application/octet-stream

      - name: Upload mmwave-discovery binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./result/bin/mmwave-discovery
          asset_name: mmwave-discovery
          asset_content_type: application/octet-stream
          
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
